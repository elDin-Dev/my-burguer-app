{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","state","orders","loading","this","onFetchOrders","token","userId","Spinner","id","Component","connect","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,iHCiCXC,EAhCD,SAACC,GAEX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAGbC,IAAKP,EAAGJ,MAAOI,EAAGJ,KATf,KASuBI,EAAGH,OAT1B,QAWX,OACI,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GACjB,qCAAU,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,+ECrBnE,IAAMC,EAAb,2MACEC,MAAQ,CACNC,OAAQ,GACRC,SAAS,GAHb,mFAOIC,KAAK3B,MAAM4B,cAAcD,KAAK3B,MAAM6B,MAAOF,KAAK3B,MAAM8B,UAP1D,+BAWI,IAAIL,EAAS,kBAACM,EAAA,EAAD,MAYb,OAXKJ,KAAK3B,MAAM0B,UACdD,EAASE,KAAK3B,MAAMyB,OAAOlB,KAAI,SAACR,GAC9B,OACE,kBAACmB,EAAD,CACEH,IAAKhB,EAAMiC,GACX/B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAKd,6BAAMI,OAvBjB,GAA4BQ,aA0CbC,uBAfS,SAACV,GACvB,MAAO,CACLC,OAAQD,EAAMzB,MAAM0B,OACpBC,QAASF,EAAMzB,MAAM2B,QACrBG,MAAOL,EAAMW,KAAKN,MAClBC,OAAQN,EAAMW,KAAKL,WAIG,SAACM,GACzB,MAAO,CACLR,cAAe,SAACC,EAAOC,GAAR,OAAmBM,EAASC,IAAoBR,EAAOC,QAI3DI,CAGbI,YAAiBf,EAAQgB","file":"static/js/5.24f9a86f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1gGBo\"};","import React from 'react'\r\nimport classes from './Order.module.css';\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName],\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 9px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px',\r\n\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    })\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USE {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-order\";\r\nimport withErrorHandler from \"../../hoc/withErroHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nexport class Orders extends Component {\r\n  state = {\r\n    orders: [],\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.orders.map((order) => {\r\n        return (\r\n          <Order\r\n            key={order.id}\r\n            ingredients={order.ingredients}\r\n            price={order.price}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return <div>{orders}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispathToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}